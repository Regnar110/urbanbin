{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mateusz\\\\Desktop\\\\Github-projects\\\\urbanbin\\\\src\\\\containers\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.scss';\nimport { Switch, Route } from 'react-router-dom';\nimport Navigation from '../components/Navigation/Navigation.component';\nimport SidePopUpBar from '../components/Side-popup-bar/SidePopUp.component';\nimport MobileNavigation from '../components/MobileNavigation/MobileNavigation.component';\nimport About from '../pages/About/About.component';\nimport Home from '../pages/Home/Home.component';\nimport Contact from '../pages/Contact/Contact.component';\nimport Products from '../pages/Products/Products.component';\n\nconst App = () => {\n  _s();\n\n  const [navType, setNav] = useState('');\n  const windowW = window.innerWidth;\n\n  const changeNavBar = () => {\n    // change nav-bar when resizing window\n    const navBarRender = window.matchMedia(\"(max-width: 890px)\");\n    navBarRender.matches ? setNav('small') : setNav('large');\n  };\n\n  useEffect(() => {\n    // check if window width is less or equal 621px and do action depending on this data\n    window.addEventListener('resize', changeNavBar);\n    windowW <= 890 ? setNav('small') : setNav('large');\n    return () => {\n      window.removeEventListener('resize', changeNavBar);\n    };\n  }, [windowW]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"app\",\n    className: \"App\",\n    children: [navType === 'large' ? /*#__PURE__*/_jsxDEV(Navigation, {\n      navType: navType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(MobileNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 63\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/about\",\n        component: About\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/contact\",\n        component: Contact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/products\",\n        component: Products\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"O/jKtdm8Zq8w2pwSHWGBp9Hq8do=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Mateusz/Desktop/Github-projects/urbanbin/src/containers/App.js"],"names":["useState","useEffect","Switch","Route","Navigation","SidePopUpBar","MobileNavigation","About","Home","Contact","Products","App","navType","setNav","windowW","window","innerWidth","changeNavBar","navBarRender","matchMedia","matches","addEventListener","removeEventListener"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,YAAP;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,YAAP,MAAyB,kDAAzB;AACA,OAAOC,gBAAP,MAA6B,2DAA7B;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,QAAP,MAAqB,sCAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,OAAD,EAAUC,MAAV,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMc,OAAO,GAAEC,MAAM,CAACC,UAAtB;;AAEA,QAAMC,YAAY,GAAG,MAAM;AAAE;AAC3B,UAAMC,YAAY,GAAGH,MAAM,CAACI,UAAP,CAAkB,oBAAlB,CAArB;AACED,IAAAA,YAAY,CAACE,OAAb,GAAuBP,MAAM,CAAC,OAAD,CAA7B,GAAyCA,MAAM,CAAC,OAAD,CAA/C;AACH,GAHD;;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AAAE;AAChBc,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC;AACAH,IAAAA,OAAO,IAAI,GAAX,GACED,MAAM,CAAC,OAAD,CADR,GAGEA,MAAM,CAAC,OAAD,CAHR;AAKE,WAAO,MAAM;AACXE,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC;AACD,KAFD;AAGH,GAVQ,EAUN,CAACH,OAAD,CAVM,CAAT;AAeA,sBACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,SAAS,EAAC,KAAxB;AAAA,eAEEF,OAAO,KAAK,OAAZ,gBAAsB,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YAAtB,gBAAwD,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAF1D,eAIE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEJ;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,SAAS,EAAED;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,UAAlB;AAA6B,QAAA,SAAS,EAAEE;AAAxC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvCD;;GAAMC,G;;KAAAA,G;AAyCN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport './App.scss';\nimport {Switch, Route} from 'react-router-dom';\nimport Navigation from '../components/Navigation/Navigation.component'\nimport SidePopUpBar from '../components/Side-popup-bar/SidePopUp.component'\nimport MobileNavigation from '../components/MobileNavigation/MobileNavigation.component'\nimport About from '../pages/About/About.component'\nimport Home from '../pages/Home/Home.component'\nimport Contact from '../pages/Contact/Contact.component'\nimport Products from '../pages/Products/Products.component'\n\nconst App = () => {\n\n  const [navType, setNav] = useState('');\n\n  const windowW= window.innerWidth;\n\n  const changeNavBar = () => { // change nav-bar when resizing window\n    const navBarRender = window.matchMedia(\"(max-width: 890px)\")\n      navBarRender.matches ? setNav('small') : setNav('large');\n  }\n\n  useEffect(() => { // check if window width is less or equal 621px and do action depending on this data\n    window.addEventListener('resize', changeNavBar);\n    windowW <= 890 ?\n      setNav('small')\n      :\n      setNav('large')\n\n      return () => {\n        window.removeEventListener('resize', changeNavBar)\n      }\n  }, [windowW])\n\n  \n\n\n  return (\n    <div id='app' className='App'>\n    {\n      navType === 'large' ? <Navigation navType={navType}/> : <MobileNavigation />\n    }\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/about' component={About} />\n        <Route exact path='/contact' component={Contact} />\n        <Route path='/products' component={Products} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}