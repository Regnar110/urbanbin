{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"C:/Users/Mateusz/Desktop/Github-projects/urbanbin/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import'./App.scss';import{Switch,Route}from'react-router-dom';import Navigation from'../components/Navigation/Navigation.component';import SidePopUpBar from'../components/Side-popup-bar/SidePopUp.component';import MobileNavigation from'../components/MobileNavigation/MobileNavigation.component';import Company from'../pages/Company/Company.component';import Home from'../pages/Home/Home.component';import Contact from'../pages/Contact/Contact.component';import Products from'../pages/Products/Products.component';import Footer from'../components/Footer/Footer.component';var App=function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),navType=_useState2[0],setNav=_useState2[1];var windowW=window.innerWidth;var changeNavBar=function changeNavBar(){// change nav-bar when resizing window\nvar navBarRender=window.matchMedia(\"(max-width: 890px)\");navBarRender.matches?setNav('small'):setNav('large');};useEffect(function(){// check if window width is less or equal 621px and do action depending on this data\nwindow.addEventListener('resize',changeNavBar);windowW<=890?setNav('small'):setNav('large');return function(){window.removeEventListener('resize',changeNavBar);};},[windowW]);return/*#__PURE__*/_jsxs(\"div\",{id:\"app\",className:\"App\",children:[navType==='large'?/*#__PURE__*/_jsx(Navigation,{navType:navType}):/*#__PURE__*/_jsx(MobileNavigation,{}),/*#__PURE__*/_jsx(SidePopUpBar,{}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:Home}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/company\",component:Company}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/contact\",component:Contact}),/*#__PURE__*/_jsx(Route,{path:\"/products\",component:Products})]}),/*#__PURE__*/_jsx(Footer,{})]});};export default App;","map":{"version":3,"sources":["C:/Users/Mateusz/Desktop/Github-projects/urbanbin/frontend/src/containers/App.js"],"names":["useState","useEffect","Switch","Route","Navigation","SidePopUpBar","MobileNavigation","Company","Home","Contact","Products","Footer","App","navType","setNav","windowW","window","innerWidth","changeNavBar","navBarRender","matchMedia","matches","addEventListener","removeEventListener"],"mappings":"yQAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAO,YAAP,CACA,OAAQC,MAAR,CAAgBC,KAAhB,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,+CAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,kDAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2DAA7B,CACA,MAAOC,CAAAA,OAAP,KAAoB,oCAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,8BAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oCAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sCAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,uCAAnB,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eAEUZ,QAAQ,CAAC,EAAD,CAFlB,wCAETa,OAFS,eAEAC,MAFA,eAIhB,GAAMC,CAAAA,OAAO,CAAEC,MAAM,CAACC,UAAtB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAAE;AAC3B,GAAMC,CAAAA,YAAY,CAAGH,MAAM,CAACI,UAAP,CAAkB,oBAAlB,CAArB,CACED,YAAY,CAACE,OAAb,CAAuBP,MAAM,CAAC,OAAD,CAA7B,CAAyCA,MAAM,CAAC,OAAD,CAA/C,CACH,CAHD,CAKAb,SAAS,CAAC,UAAM,CAAE;AAChBe,MAAM,CAACM,gBAAP,CAAwB,QAAxB,CAAkCJ,YAAlC,EACAH,OAAO,EAAI,GAAX,CACED,MAAM,CAAC,OAAD,CADR,CAGEA,MAAM,CAAC,OAAD,CAHR,CAKE,MAAO,WAAM,CACXE,MAAM,CAACO,mBAAP,CAA2B,QAA3B,CAAqCL,YAArC,EACD,CAFD,CAGH,CAVQ,CAUN,CAACH,OAAD,CAVM,CAAT,CAYA,mBACE,aAAK,EAAE,CAAC,KAAR,CAAc,SAAS,CAAC,KAAxB,WAEIF,OAAO,GAAK,OAAZ,cAAsB,KAAC,UAAD,EAAY,OAAO,CAAEA,OAArB,EAAtB,cAAwD,KAAC,gBAAD,IAF5D,cAIE,KAAC,YAAD,IAJF,cAKE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAEL,IAAjC,EADF,cAEE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,UAAlB,CAA6B,SAAS,CAAED,OAAxC,EAFF,cAGE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,UAAlB,CAA6B,SAAS,CAAEE,OAAxC,EAHF,cAIE,KAAC,KAAD,EAAO,IAAI,CAAC,WAAZ,CAAwB,SAAS,CAAEC,QAAnC,EAJF,GALF,cAWE,KAAC,MAAD,IAXF,GADF,CAeD,CAtCD,CAwCA,cAAeE,CAAAA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport './App.scss';\nimport {Switch, Route} from 'react-router-dom';\nimport Navigation from '../components/Navigation/Navigation.component'\nimport SidePopUpBar from '../components/Side-popup-bar/SidePopUp.component'\nimport MobileNavigation from '../components/MobileNavigation/MobileNavigation.component'\nimport Company from '../pages/Company/Company.component'\nimport Home from '../pages/Home/Home.component'\nimport Contact from '../pages/Contact/Contact.component'\nimport Products from '../pages/Products/Products.component'\nimport Footer from '../components/Footer/Footer.component'\n\nconst App = () => {\n\n  const [navType, setNav] = useState('');\n\n  const windowW= window.innerWidth;\n\n  const changeNavBar = () => { // change nav-bar when resizing window\n    const navBarRender = window.matchMedia(\"(max-width: 890px)\")\n      navBarRender.matches ? setNav('small') : setNav('large');\n  }\n\n  useEffect(() => { // check if window width is less or equal 621px and do action depending on this data\n    window.addEventListener('resize', changeNavBar);\n    windowW <= 890 ?\n      setNav('small')\n      :\n      setNav('large')\n\n      return () => {\n        window.removeEventListener('resize', changeNavBar)\n      }\n  }, [windowW])\n\n  return (\n    <div id='app' className='App'>\n      {\n        navType === 'large' ? <Navigation navType={navType}/> : <MobileNavigation />\n      }\n      <SidePopUpBar />\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/company' component={Company} />\n        <Route exact path='/contact' component={Contact} />\n        <Route path='/products' component={Products} />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}