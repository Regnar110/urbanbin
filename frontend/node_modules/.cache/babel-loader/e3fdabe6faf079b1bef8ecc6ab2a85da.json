{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mateusz\\\\Desktop\\\\Github-projects\\\\urbanbin\\\\frontend\\\\src\\\\components\\\\Navigation\\\\Navigation.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport './navigation.scss';\nimport { Link } from 'react-router-dom';\nimport UrbanBinLogo from \"../../assets/urbanbin-logo.svg\";\n\nconst Navigation = ({\n  navType\n}) => {\n  _s();\n\n  const routesArray = [{\n    path: '/',\n    route: 'HOME'\n  }, {\n    path: '/company',\n    route: 'COMPANY'\n  }, {\n    path: '/products',\n    route: 'PRODUCTS'\n  }, {\n    path: '/contact',\n    route: 'CONTACT US'\n  }];\n\n  const handleScrollChange = () => {\n    let position = document.querySelector('body').getBoundingClientRect();\n    const navbar = document.querySelector('.navigation');\n    position.y < -1 ? navbar.style.height = '120px' : navbar.style.height = '90px';\n  };\n\n  const handleScrollToTop = () => {\n    document.body.scrollTop = 0; // For Safari\n\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n  };\n\n  useEffect(() => {\n    if (navType === 'large') {\n      // dodane z powodu tego, że komponent nie dopuszczał do wyrenderowania małego paska nawigacyjnego bo próbował odpalić funkcję handleScrollChange. NavType to argument przekazany z App który zawiera 'large' lub 'small' - w zależności jaki pasek powinien zostać wyświetlony\n      window.addEventListener('scroll', handleScrollChange);\n    }\n\n    return () => {\n      window.removeEventListener('scroll', handleScrollChange);\n    };\n  }, [navType]);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navigation\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"urbanbin-logo\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"logo\",\n          alt: \"company-logo\",\n          src: UrbanBinLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-routes\",\n      children: routesArray.map(({\n        path,\n        route,\n        routeFirst\n      }, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-route\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: path,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"route-content\",\n              onClick: handleScrollToTop,\n              children: route\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"underline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navigation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Navigation;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["C:/Users/Mateusz/Desktop/Github-projects/urbanbin/frontend/src/components/Navigation/Navigation.component.jsx"],"names":["useEffect","Link","Navigation","navType","routesArray","path","route","handleScrollChange","position","document","querySelector","getBoundingClientRect","navbar","y","style","height","handleScrollToTop","body","scrollTop","documentElement","window","addEventListener","removeEventListener","UrbanBinLogo","map","routeFirst","index"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,mBAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAEhC,QAAMC,WAAW,GAAG,CAChB;AACIC,IAAAA,IAAI,EAAE,GADV;AAEIC,IAAAA,KAAK,EAAE;AAFX,GADgB,EAKhB;AACID,IAAAA,IAAI,EAAE,UADV;AAEIC,IAAAA,KAAK,EAAE;AAFX,GALgB,EAShB;AACID,IAAAA,IAAI,EAAE,WADV;AAEIC,IAAAA,KAAK,EAAE;AAFX,GATgB,EAahB;AACID,IAAAA,IAAI,EAAE,UADV;AAEIC,IAAAA,KAAK,EAAE;AAFX,GAbgB,CAApB;;AAmBA,QAAMC,kBAAkB,GAAG,MAAM;AAC7B,QAAIC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,qBAA/B,EAAf;AACA,UAAMC,MAAM,GAAGH,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAf;AACAF,IAAAA,QAAQ,CAACK,CAAT,GAAa,CAAC,CAAd,GACID,MAAM,CAACE,KAAP,CAAaC,MAAb,GAAoB,OADxB,GAGIH,MAAM,CAACE,KAAP,CAAaC,MAAb,GAAoB,MAHxB;AAIH,GAPD;;AASA,QAAMC,iBAAiB,GAAG,MAAM;AAC5BP,IAAAA,QAAQ,CAACQ,IAAT,CAAcC,SAAd,GAA0B,CAA1B,CAD4B,CACC;;AAC7BT,IAAAA,QAAQ,CAACU,eAAT,CAAyBD,SAAzB,GAAqC,CAArC,CAF4B,CAEY;AAC3C,GAHD;;AAKAlB,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGG,OAAO,KAAG,OAAb,EAAqB;AAAE;AACpBiB,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCd,kBAAlC;AACF;;AACD,WAAO,MAAM;AACTa,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCf,kBAArC;AACH,KAFD;AAGH,GAPQ,EAON,CAACJ,OAAD,CAPM,CAAT;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA,+BAAa;AAAK,UAAA,EAAE,EAAC,MAAR;AAAe,UAAA,GAAG,EAAC,cAAnB;AAAkC,UAAA,GAAG,EAAEoB;AAAvC;AAAA;AAAA;AAAA;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBAEQnB,WAAW,CAACoB,GAAZ,CAAgB,CAAC;AAACnB,QAAAA,IAAD;AAAOC,QAAAA,KAAP;AAAcmB,QAAAA;AAAd,OAAD,EAA4BC,KAA5B,KAAsC;AAClD,4BACI;AAAiB,UAAA,SAAS,EAAC,WAA3B;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAErB,IAAV;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,eAAf;AAA+B,cAAA,OAAO,EAAEW,iBAAxC;AAAA,wBACIV;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUoB,KAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAUH,OAXD;AAFR;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAnED;;GAAMxB,U;;KAAAA,U;AAqEN,eAAeA,UAAf","sourcesContent":["import { useEffect } from 'react';\r\nimport './navigation.scss'\r\nimport {Link} from 'react-router-dom'\r\nimport UrbanBinLogo from '../../assets/urbanbin-logo.svg'\r\n\r\nconst Navigation = ({ navType }) => {\r\n    \r\n    const routesArray = [\r\n        {\r\n            path: '/',\r\n            route: 'HOME'\r\n        },\r\n        {\r\n            path: '/company',\r\n            route: 'COMPANY'\r\n        },\r\n        {\r\n            path: '/products',\r\n            route: 'PRODUCTS'\r\n        },\r\n        {\r\n            path: '/contact',\r\n            route: 'CONTACT US'\r\n        }\r\n    ]\r\n    \r\n    const handleScrollChange = () => {\r\n        let position = document.querySelector('body').getBoundingClientRect();\r\n        const navbar = document.querySelector('.navigation')\r\n        position.y < -1 ?\r\n            navbar.style.height='120px'\r\n        :\r\n            navbar.style.height='90px'\r\n    }\r\n\r\n    const handleScrollToTop = () => {\r\n        document.body.scrollTop = 0; // For Safari\r\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if(navType==='large'){ // dodane z powodu tego, że komponent nie dopuszczał do wyrenderowania małego paska nawigacyjnego bo próbował odpalić funkcję handleScrollChange. NavType to argument przekazany z App który zawiera 'large' lub 'small' - w zależności jaki pasek powinien zostać wyświetlony\r\n           window.addEventListener('scroll', handleScrollChange) \r\n        }\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScrollChange)\r\n        }\r\n    }, [navType])\r\n\r\n    return (\r\n        <nav className='navigation'>\r\n            <div className='urbanbin-logo'>\r\n                <Link to='/'><img id='logo' alt='company-logo' src={UrbanBinLogo} /></Link>\r\n            </div>\r\n            <div className='navigation-routes'>\r\n                {\r\n                    routesArray.map(({path, route, routeFirst}, index) => {\r\n                        return(\r\n                            <div key={index} className='nav-route'>\r\n                                <Link to={path}>\r\n                                    <div className='route-content' onClick={handleScrollToTop}>\r\n                                       {route}\r\n                                    </div>\r\n                                    <div className='underline'/>\r\n                                </Link>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;"]},"metadata":{},"sourceType":"module"}